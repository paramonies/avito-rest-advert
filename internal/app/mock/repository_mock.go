// Code generated by MockGen. DO NOT EDIT.
// Source: repository/repository.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/paramonies/avito-rest-advert/internal/app/model"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// CreateAdvert mocks base method.
func (m *MockRepository) CreateAdvert(arg0 model.Advert) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAdvert", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAdvert indicates an expected call of CreateAdvert.
func (mr *MockRepositoryMockRecorder) CreateAdvert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAdvert", reflect.TypeOf((*MockRepository)(nil).CreateAdvert), arg0)
}

// GetAdvertById mocks base method.
func (m *MockRepository) GetAdvertById(arg0 int) (model.Advert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdvertById", arg0)
	ret0, _ := ret[0].(model.Advert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdvertById indicates an expected call of GetAdvertById.
func (mr *MockRepositoryMockRecorder) GetAdvertById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdvertById", reflect.TypeOf((*MockRepository)(nil).GetAdvertById), arg0)
}

// GetAdvertList mocks base method.
func (m *MockRepository) GetAdvertList(arg0 int, arg1, arg2 string) ([]model.Advert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdvertList", arg0, arg1, arg2)
	ret0, _ := ret[0].([]model.Advert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdvertList indicates an expected call of GetAdvertList.
func (mr *MockRepositoryMockRecorder) GetAdvertList(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdvertList", reflect.TypeOf((*MockRepository)(nil).GetAdvertList), arg0, arg1, arg2)
}
